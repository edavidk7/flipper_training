type: ${cls:flipper_training.experiments.ppo.config.PPOExperimentConfig}
name: fixed_start_goal_flat_debugging_config
comment: "Debugging PPO on flat terrain with fixed start and goal"
training_dtype: ${dtype:float32}
seed: 42
use_wandb: true
eval_and_save_every: 10 # steps
max_eval_steps: 500
device: cuda:0
num_robots: 128
grid_res: 0.05
max_coord: 3.2
vecnorm_opts:
  decay: 0.95
  eps: 1e-4
vecnorm_on_reward: true
robot_model_opts:
  kind: marv
  mesh_voxel_size: 0.01
  points_per_driving_part: 384
  points_per_body: 512
  wheel_assignment_margin: 0.02
  linear_track_assignment_margin: 0.05
optimizer: ${cls:torch.optim.AdamW}
optimizer_opts:
  lr: 3e-4
scheduler: ${cls:torch.optim.lr_scheduler.StepLR}
total_frames: ${mul:5242880,2}
frames_per_batch: 128
scheduler_opts:
  step_size: ${intdiv:${intdiv:${total_frames},${mul:${frames_per_batch},${num_robots}}},2}
  gamma: 0.5
max_grad_norm: 1
heightmap_gen: ${ cls:flipper_training.heightmaps.flat.FlatHeightmapGenerator}
heightmap_gen_opts: {}
world_opts:
  k_stiffness: 30000
  k_friction_lon: 0.8
  k_friction_lat: 0.5
engine_compile_opts:
  max-autotune: true
  triton.cudagraphs: true
  coordinate_descent_tuning: true
  correctness_iters: 100
  benchmark_iters: 1000
  atol: 1
  rtol: 0
epochs_per_batch: 1
frames_per_sub_batch: 32
gae_compile_opts: null
ppo_compile_opts: null
gae_opts:
  gamma: 0.99
  lmbda: 0.95
  average_gae: true
  skip_existing: false
ppo_opts:
  clip_epsilon: 0.2
  entropy_bonus: true
  entropy_coef: 0.01
  critic_coef: 1.0
  loss_critic_type: smooth_l1
  normalize_advantage: true
data_collector_opts:
  split_trajs: false
  compile_policy: false
  exploration_type: RANDOM
objective: ${cls:flipper_training.rl_objectives.fixed_goal.FixedStartGoalNavigation}
objective_opts:
  iteration_limit: 500
  goal_reached_threshold: 0.05
  max_feasible_pitch: 1.0
  max_feasible_roll: 1.0
  start_x_y_z: ${tensor:[-0.3, 0.0, 0.2]}
  goal_x_y_z: ${tensor:[0.3, 0.0, 0.05]}
  init_joint_angles: ${tensor:[0.0,0.0,0.0,0.0]}
# reward: ${cls:flipper_training.rl_rewards.rewards.Goal}
# reward_opts:
#   goal_reached_reward: 2.0
#   failed_reward: -2.0
#   exp: 1
#   weight: 1.0
reward: ${cls:flipper_training.rl_rewards.rewards.PotentialGoal}
reward_opts:
  goal_reached_reward: 2.0
  failed_reward: -2.0
  step_penalty: -0.01
  gamma: ${gae_opts.gamma}
observations:
  state:
    observation: ${cls:flipper_training.observations.robot_state.LocalStateVector}
    opts: {}
policy_opts:
  hidden_dim: 32
  value_mlp_layers: 4
  actor_mlp_layers: 4
engine_opts:
  damping_alpha: 5.0
  dt: 0.01
